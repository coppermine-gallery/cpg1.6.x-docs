<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
<title>Database schema - Coppermine Photo Gallery - Documentation &amp; Manual</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="language" content="en" />
<meta name="copyright" content="Coppermine dev team" />
<meta name="description" content="Database schema: This part of documentation describes the database tables Coppermine uses and how they relate to each other. This part of the documentation is not meant for end users of Coppermine, but only for developers. There is no support for this section, it comes as-is." />
<!--
  Coppermine version: 1.6.03
  $HeadURL$
-->
<link rel="stylesheet" type="text/css" href="../style/style.css" media="all" />
<link rel="stylesheet" type="text/css" href="../style/screen.css" media="screen" />
<link rel="stylesheet" type="text/css" href="../style/print.css" media="print" />
<link rel="shortcut icon" href="../favicon.ico" />
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/jquery.treeview.js" type="text/javascript"></script>
<script src="script.js" type="text/javascript"></script>
</head>
<body>
<h1 id="docheader">Coppermine Photo Gallery v1.6.x: Documentation and Manual</h1>
<div id="toc">
<a href="toc.htm">Table of Contents</a>
</div>

<a id="db_intro"></a><h1>Database schema<a href="#db_intro" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h1>
<p>The following is a list of the tables created by Coppermine during installation plus a description of the fields used. The default table prefix of cpg15x_ is used here, but this is user configurable.</p>

<a id="db_config_file"></a><h2>Configuration file<a href="#db_config_file" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Database details (mySQL hostname, database name, mySQL username, mySQL password, table prefix) are being stored in the file <span class="code">include/config.inc.php</span></p>
<p>When migrating to another server or if the database details should change (e.g. if the mySQL password has been changed), reflect those changes by editing the file <span class="code">include/config.inc.php</span>, which does not come with the coppermine package, but is created during the install process of coppermine on the server.</p>

<a id="db_reference_within_code"></a><h2>Database reference within coppermine code<a href="#db_reference_within_code" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>To reflect the ability of coppermine to use a common table prefix for all tables created by coppermine, there is no direct reference to the tables in the Coppermine code. If you try to modify Coppermine's core code or if your try to come up with a plugin of your own, you need to understand how Coppermine refers to the table names internally. Here's a list that should explain how to refer to tables within the code: the code snippet has been taken from <span class="code">include/init.inc.php</span>:</p>
<textarea class="samplecode" rows="20" cols="80">$CONFIG['TABLE_PICTURES']      = $CONFIG['TABLE_PREFIX'].'pictures';
$CONFIG['TABLE_ALBUMS']        = $CONFIG['TABLE_PREFIX'].'albums';
$CONFIG['TABLE_COMMENTS']      = $CONFIG['TABLE_PREFIX'].'comments';
$CONFIG['TABLE_CATEGORIES']    = $CONFIG['TABLE_PREFIX'].'categories';
$CONFIG['TABLE_CONFIG']        = $CONFIG['TABLE_PREFIX'].'config';
$CONFIG['TABLE_USERGROUPS']    = $CONFIG['TABLE_PREFIX'].'usergroups';
$CONFIG['TABLE_VOTES']         = $CONFIG['TABLE_PREFIX'].'votes';
$CONFIG['TABLE_USERS']         = $CONFIG['TABLE_PREFIX'].'users';
$CONFIG['TABLE_BANNED']        = $CONFIG['TABLE_PREFIX'].'banned';
$CONFIG['TABLE_EXIF']          = $CONFIG['TABLE_PREFIX'].'exif';
$CONFIG['TABLE_FILETYPES']     = $CONFIG['TABLE_PREFIX'].'filetypes';
$CONFIG['TABLE_ECARDS']        = $CONFIG['TABLE_PREFIX'].'ecards';
$CONFIG['TABLE_FAVPICS']       = $CONFIG['TABLE_PREFIX'].'favpics';
$CONFIG['TABLE_BRIDGE']        = $CONFIG['TABLE_PREFIX'].'bridge';
$CONFIG['TABLE_VOTE_STATS']    = $CONFIG['TABLE_PREFIX'].'vote_stats';
$CONFIG['TABLE_HIT_STATS']     = $CONFIG['TABLE_PREFIX'].'hit_stats';
$CONFIG['TABLE_TEMP_MESSAGES'] = $CONFIG['TABLE_PREFIX'].'temp_messages';
$CONFIG['TABLE_CATMAP']        = $CONFIG['TABLE_PREFIX'].'categorymap';
$CONFIG['TABLE_LANGUAGE']      = $CONFIG['TABLE_PREFIX'].'languages';
$CONFIG['TABLE_DICT']          = $CONFIG['TABLE_PREFIX'].'dict';</textarea>
<p class="cpg_example">If you want to refer to the albums table code-wise, use <span class="code">$CONFIG['TABLE_ALBUMS']</span>.</p>
<p>In the individual table information below, you will find the variable name for each table as an example.</p>

<a id="db_albums"></a><h2>cpg15x_albums<a href="#db_albums" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Stores information about albums. Albums contain files and are (optionally) contained within categories.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_ALBUMS']</span>.</p>
<br />
<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_albums-aid"></a><strong>aid</strong></td>
    <td>Integer</td>
    <td>Primary key. This is the identifier of the album used throughout Coppermine.</td>
    <td>
        <a href="#db_pictures-aid">cpg15x_pictures.aid</a>
    </td>
  </tr>
  <tr>
    <td><strong>title</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The short title of the album.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>description</strong></td>
    <td>Text (&lt;=65K chars)</td>
    <td>The longer album description or caption.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>visibility</strong></td>
    <td>Integer</td>
    <td>
        <p>This corresponds to the 'album can be viewed by' option.</p>
        <p>If the value is less than 10000 the number corresponds to the group that has permission to view the album.</p>
        <p>If the value is over 10000 then the number corresponds to 10000 plus the user_id of the user that has permission to view this album (the 'me only' option).</p>
        <p>The default value of 0 means there are no restrictions (with the exception of a possible album password); the album is publicly visible.</p></td>
    <td>
        <a href="#db_usergroups-group_id">cpg15x_usergroups.group_id</a><br />
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>uploads</strong></td>
    <td>YES / NO</td>
    <td>Whether uploads are permitted to this album.<p><small>Note: Group based permissions also apply.</small></p></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>comments</strong></td>
    <td>YES / NO</td>
    <td>Whether comments are permitted on files in this album.<p><small>Note: Group based permissions also apply.</small></p></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>votes</strong></td>
    <td>YES / NO</td>
    <td>Whether voting/rating of files is permitted in this album.<p><small>Note: Group based permissions also apply.</small></p>
    <p><small>Note: do not confuse this field with the votes field in the pictures table, which is a count of the number of votes on that picture.</small></p></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pos</strong></td>
    <td>Integer</td>
    <td>This is the position of the album within its parent category. Albums are sorted by position ascending then by aid. The default position is 0. This causes new albums to appear at the end of listings unless moved manually.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>category</strong></td>
    <td>Integer</td>
    <td>The parent category of this album. A category of 0 indicates the album is in 'no category' and is displayed on the main page directly. If the value is more than 10000 then it means the album is a user album belonging to the user with id of <strong>category</strong> - 10000.</td>
    <td>
        <a href="#db_categories-cid">cpg15x_categories.cid</a>
    </td>
  </tr>
  <tr>
    <td><strong>owner</strong></td>
    <td>Integer</td>
    <td></td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><a id="db_albums-thumb"></a><strong>thumb</strong></td>
    <td>Integer</td>
    <td>Indicates which picture is to be used as the thumbnail image for the album. If the value is 0 the last uploaded picture in that album is used. If the value is -1 a random picture from the album is selected. Otherwise, the value corresponds to the pid of the picture selected as thumbnail. If the album is empty a special icon is used to indicate this.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>keyword</strong></td>
    <td>Text (&lt;=50 chars)</td>
    <td>The album keyword. Used by the 'linked files' 'feature' to display files in multiple albums. Files that contain the album keyword as one of their picture keywords will be displayed in the album. <p><small>Note: Files cannot truely be in multiple albums as a consequence of the original database design.</small></p></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>alb_password</strong></td>
    <td>MD5 hash</td>
    <td>This is an MD5 hash of the album password. If this is blank then there is no album password.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>alb_password_hint</strong></td>
    <td>Text (&lt;=65K chars)</td>
    <td>An album hint which is displayed to users when they are asked to enter the album password.</td>
    <td class="tablebe"></td>
  </tr>
  <tr>
    <td><strong>moderator_group</strong></td>
    <td>Integer</td>
    <td>Specifies a group which has moderator permissions for this album. If set to 0 (the default) then no such group is specified.</td>
    <td>
      <a href="#db_usergroups-group_id">cpg15x_usergroups.group_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>alb_hits</strong></td>
    <td>Integer</td>
    <td>Counts the number of times this album has been viewed. This counter can be disabled in config. <p><small>Note: This is not a sum of the individual file view counters.</small></p></td>
    <td class="tablebe"></td>
  </tr>
</table>

<a id="db_banned"></a><h2>cpg15x_banned<a href="#db_banned" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains bans placed on users, user names, email addresses, and IP addresses.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_BANNED']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>ban_id</strong></td>
    <td>Integer</td>
    <td>Primary key. Unique identifier for a ban.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_id</strong></td>
    <td>Integer</td>
    <td>The user that this ban applies to. Banned users are unable to use the gallery in any way.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>user_name</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>A username that this ban applies to. Registrations from a banned username are refused.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>email</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>An email address which this ban applies to. Registrations from a banned email address are refused.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>ip_addr</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>An IP address or wildcard IP (eg. 192.168.0.%) that this ban applies to. Visitors with a matching IP address will be unable to use the gallery in any way.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>expiry</strong></td>
    <td>Datetime</td>
    <td>The date/time that this ban is set to expire.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>brute_force</strong></td>
    <td>Integer</td>
    <td>A counter used to track failed login attempts which may lead to an actual ban. Counts down from the config setting 'Number of failed login attempts until temporary ban' to 0.</td>
    <td></td>
  </tr>
</table>

<a id="db_bridge"></a><h2>cpg15x_bridge<a href="#db_bridge" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains bridge configuration settings. Used only by the bridge manager and only when bridging is enabled.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_BRIDGE']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>name</strong></td>
    <td>Text (&lt;=40 chars)</td>
    <td>Name of configuration setting.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>value</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Value of configuration setting.</td>
    <td></td>
  </tr>
</table>

<a id="db_categories"></a><h2>cpg15x_categories<a href="#db_categories" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains information about categories. Categories contain albums and can be infinitely nested.</p>
<p>Coppermine uses both the adjacency list and nested set models to represent category heirarchy. For a description of these methods see <a href="http://dev.mysql.com/tech-resources/articles/hierarchical-data.html">dev.mysql.com</a>. The ajacency method should be used for simple lookups (eg. how many subcategories does category 3 have?) and the the nested set model should be used when generating a complete or partial hierarchy (eg. for a dropdown menu) since it scales much better.</p>
<p>The category manager will regenerate the nested set representation from <strong>parent</strong> information if any category has <strong>lft</strong> set to 0. This is useful if you are importing categories from another system or have made changes manually.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_CATEGORIES']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_categories-cid"></a><strong>cid</strong></td>
    <td>Integer</td>
    <td>Primary key. Unique identifier for a category.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>owner_id</strong></td>
    <td>Integer</td>
    <td></td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>name</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Short name of the category.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>description</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>A longer description of the category.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pos</strong></td>
    <td>Integer</td>
    <td>Position of the category. Categories are sorted by position ascending. The category manager assigns the position and all categories have a non-zero position.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>parent</strong></td>
    <td>Integer</td>
    <td>The immediate parent category of this category.</td>
    <td>
        <a href="#db_categories-cid">cpg15x_categories.cid</a>
    </td>
  </tr>
  <tr>
    <td><a id="db_categories-thumb"></a><strong>thumb</strong></td>
    <td>Integer</td>
    <td>The picture to be used as thumbnail for the category. If 0 then no thumbnail is displayed.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>lft</strong></td>
    <td>Integer</td>
    <td>The <strong>lft</strong> and <strong>rgt</strong> fields are used to represent the category heirarchy using the nested set model.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>rgt</strong></td>
    <td>Integer</td>
    <td>The <strong>lft</strong> and <strong>rgt</strong> fields are used to represent the category heirarchy using the nested set model.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>depth</strong></td>
    <td>Integer</td>
    <td>Represents the depth of the category in the heirarchy. A depth of 1 indicates a top level category.</td>
    <td></td>
  </tr>
</table>

<a id="db_categorymap"></a><h2>cpg15x_categorymap<a href="#db_categorymap" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains information on which groups have access to create albums in which categories.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_CATMAP']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>cid</strong></td>
    <td>Integer</td>
    <td>The category this permission applies to.</td>
    <td>
        <a href="#db_categories-cid">cpg15x_categories.cid</a>
    </td>
  </tr>
  <tr>
    <td><strong>group_id</strong></td>
    <td>Integer</td>
    <td>The group this permission applies to.</td>
    <td>
        <a href="#db_usergroups-group_id">cpg15x_usergroups.group_id</a>
    </td>
  </tr>
</table>

<a id="db_comments"></a><h2>cpg15x_comments<a href="#db_comments" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains all comments made on files. This table can get quite large if you have lots of comments. It can safely be pruned to remove comments older than a certain date.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_COMMENTS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_comments-pid"></a><strong>pid</strong></td>
    <td>Integer</td>
    <td>The file that this comment has been made against.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>msg_id</strong></td>
    <td>Integer</td>
    <td>Primary key. Unique identifier for a comment.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>msg_author</strong></td>
    <td>Text (&lt;=25 chars)</td>
    <td>The name of the user that posted the comment. This is needed mainly for anonymous commenting, however usernames of registered users are recorded here also (and must be kept up to date if a username changes).</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>msg_body</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The text of the comment that was entered.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>msg_date</strong></td>
    <td>Datetime</td>
    <td>The date and time the comment was posted.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>msg_raw_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP of the comment poster. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>msg_hdr_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP of the comment poster. This IP is derived from the HTTP_CLIENT_IP or HTTP_X_FORWARDED_FOR variables. If the webserver is behind a proxy this should be the actual client IP instead of the proxy's IP. If neither variable is present this will be the same as the <strong>msg_raw_ip</strong> value.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>author_md5_id</strong></td>
    <td>MD5 hash</td>
    <td>A randomly generated unique id used to 'identify' anonymous users and allow them to edit/delete their own comments (but not those of other anonymous users). It also allows enforcement of flood protection rules against individual anonymous users. This field is empty for comments by registered users.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>author_id</strong></td>
    <td>Integer</td>
    <td>The user id of the comment poster, or 0 for anonymous comments.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>approval</strong></td>
    <td>YES / NO</td>
    <td>Whether the comment has been approved. If comment approval is not enabled, all comments are added with <strong>approval</strong> already set to YES. Comments with <strong>approval</strong> set to NO are not displayed to normal users.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>spam</strong></td>
    <td>YES / NO</td>
    <td>Whether the comment has been determined to be a spam comment by akismet (if enabled).</td>
    <td></td>
  </tr>
</table>

<a id="db_config"></a><h2>cpg15x_config<a href="#db_config" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains main configuration settings.</p>
<p>Plugins can also add settings here. If so, they should prefix their settings with the short name of the plugin and clean up when uninstalled.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_CONFIG']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>name</strong></td>
    <td>Text (&lt;=40 chars)</td>
    <td>Name of configuration setting.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>value</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Value of configuration setting.</td>
    <td></td>
  </tr>
</table>

<a id="db_dict"></a><h2>cpg15x_dict<a href="#db_dict" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>A list of all keywords that have been applied to files. Using this is more efficient that loading the keywords from the pictures table every time it's needed. It can be regenerated using the keyword_create_dict.php script.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_DICT']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>keyId</strong></td>
    <td>Integer</td>
    <td>Primary key. Used to manage the keyword dictionary.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>keyword</strong></td>
    <td>Text (&lt;=60 chars)</td>
    <td>Unique field. The keyword itself.</td>
    <td></td>
  </tr>
</table>

<a id="db_ecards"></a><h2>cpg15x_ecards<a href="#db_ecards" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>If logging of sent ecards has been enabled, this table will contain that log. Can be used to see if the feature is being abused (or if it is being used at all).</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_ECARDS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>eid</strong></td>
    <td>Integer</td>
    <td>Primary key. Used purely to manage the ecard log.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>sender_name</strong></td>
    <td>Text (&lt;=50 chars)</td>
    <td>The name specified as sender name on the sent ecard.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>sender_email</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The email address specified as sender email on the sent ecard.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>recipient_name</strong></td>
    <td>Text (&lt;=50 chars)</td>
    <td>The name specified as recipient name on the sent ecard.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>recipient_email</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The email address specified as recipient email on the sent ecard.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>link</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The link of the ecard. The link actually contains all details of the ecard as a base64 encoded serialized array. This is not ideal, but means ecards do not take up space in the database (unless logging is enabled) and as a consequence never expire.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>date</strong></td>
    <td>Unix timestamp</td>
    <td>The date/time the ecard was sent.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>sender_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP address of the ecard sender. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
</table>

<a id="db_exif"></a><h2>cpg15x_exif<a href="#db_exif" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>EXIF data for pictures. This table is used as a cache to avoid having to read the EXIF data from the file every time it is viewed. Can safely be emptied - the data will be reloaded as needed.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_EXIF']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_exif-pid"></a><strong>pid</strong></td>
    <td>Integer</td>
    <td>Primary key. The file that this EXIF data is from.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>exifData</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The EXIF data.</td>
    <td></td>
  </tr>
</table>

<a id="db_favpics"></a><h2>cpg15x_favpics<a href="#db_favpics" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Stores the user's favorite files list.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_FAVPICS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>user_id</strong></td>
    <td>Integer</td>
    <td>Primary key. The user whose favorites these are.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>user_favpics</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The favorites data - stored as a serialized array of pids.</td>
    <td></td>
  </tr>
</table>

<a id="db_filetypes"></a><h2>cpg15x_filetypes<a href="#db_filetypes" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>List of filetypes known to Coppermine. This tells Coppermine how to handle uploaded files based on the filename extension. Any files uploaded that are not of a known type will be rejected.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_FILETYPES']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th160">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>extension</strong></td>
    <td>Text (&lt;=7 chars)</td>
    <td>Primary key. The filename extension in question (lower case, without a leading dot)</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>mime</strong></td>
    <td>Text (&lt;=254 chars)</td>
    <td>The mime type associated with this filename extension. For list of possible mime types see <a href="http://www.iana.org/assignments/media-types/index.html">iana.org</a> or /etc/mime.types on linux systems.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>content</strong></td>
    <td>audio/document/image/movie</td>
    <td>States how Coppermine should display the file. Images are displayed using normal &lt;img&gt; tags, audio and video files using &lt;object&gt; and &lt;embed&gt; tags and documents are simply linked to. Only filetypes that are defined as images get automatic thumbails and resized versions created.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>player</strong></td>
    <td>DIVX/QT/RMP/SWF/WMP</td>
    <td>States which media player should be used to play files of this type. Applies only to movie and audio files. The visitor must have an appropriate plugin to be able to view the media file.
        <p><small>DIVX = DivX Player, QT = QuickTime, RMP = RealPlayer, SWF = Shockwave Flash Player, WMP = Windows Media Player</small></p>
    </td>
    <td></td>
  </tr>
</table>

<a id="db_hit_stats"></a><h2>cpg15x_hit_stats<a href="#db_hit_stats" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>If the detailed hit stats feature is enabled, this table will contain that data. Can safely be emptied or pruned if required.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_HIT_STATS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>sid</strong></td>
    <td>Integer</td>
    <td>Primary key. Used to identify this hit in the interface.</td>
    <td></td>
  </tr>
  <tr>
    <td><a id="db_hit_stats-pid"></a><strong>pid</strong></td>
    <td>Integer</td>
    <td>The file that this hit was on.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>ip</strong></td>
    <td>Text (&lt;=20 chars)</td>
    <td>The IP address of the visitor. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>search_phrase</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>If the visitor arrived from a search engine, the search query they entered will be stored here.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>sdate</strong></td>
    <td>Unix timestamp</td>
    <td>The date/time of the hit.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>referer</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>If the visitor arrived from another page, the URL of that page (if available) will be stored here.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>browser</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The web browser the visitor used (if reported by the browser, and if recognised as a known browser).</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>os</strong></td>
    <td>Text (&lt;=50 chars)</td>
    <td>The operating system the visitor used (if reported by the browser, and if recognised as a known operating system).</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>uid</strong></td>
    <td>Integer</td>
    <td>The id of the user if logged in, 0 for anonymous visitors.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
</table>

<a id="db_languages"></a><h2>cpg15x_languages<a href="#db_languages" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains the language file definitions.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_LANGUAGE']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>lang_id</strong></td>
    <td>Text (&lt;=40 chars)</td>
    <td>Primary key.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>english_name</strong></td>
    <td>Text (&lt;=70 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>native_name</strong></td>
    <td>Text (&lt;=70 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>custom_name</strong></td>
    <td>Text (&lt;=70 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>flag</strong></td>
    <td>Text (&lt;=15 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>abbr</strong></td>
    <td>Text (&lt;=15 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>flag</strong></td>
    <td>Text (&lt;=15 chars)</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>available</strong></td>
    <td>YES / NO</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>enabled</strong></td>
    <td>YES / NO</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>complete</strong></td>
    <td>YES / NO</td>
    <td></td>
    <td></td>
  </tr>
</table>

<a id="db_pictures"></a><h2>cpg15x_pictures<a href="#db_pictures" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains all files that have been added to Coppermine. (Not just pictures).</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_PICTURES']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_pictures-pid"></a><strong>pid</strong></td>
    <td>Integer</td>
    <td>Primary key. Used throughout Coppermine to identify this file.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>aid</strong></td>
    <td>Integer</td>
    <td>Indicates which album this picture belongs to.</td>
    <td>
        <a href="#db_albums-aid">cpg15x_albums.aid</a>
    </td>
  </tr>
  <tr>
    <td><strong>filepath</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The path on the filesystem to the directory containing the file. This is relative to Coppermine's <i>albums</i> directory.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>filename</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The name of the file on the filesystem. There should be no path components in this field.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>filesize</strong></td>
    <td>Integer</td>
    <td>The size of the file in bytes.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>total_filesize</strong></td>
    <td>Integer</td>
    <td>The combined size of the file plus any resized or thumbnail versions of the file in bytes. This is used in quota calculations.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pwidth</strong></td>
    <td>Integer</td>
    <td>The width of the picture in pixels. If the file is a movie this is the width it will be displayed at.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pheight</strong></td>
    <td>Integer</td>
    <td>The height of the picture in pixels. If the file is a movie this is the height it will be displayed at.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>hits</strong></td>
    <td>Integer</td>
    <td>The number of times the file has been viewed.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>mtime</strong></td>
    <td>Datetime</td>
    <td>The date/time of the most recent view of this file. Used to create the <i>last viewed</i> meta album.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>ctime</strong></td>
    <td>Unix timestamp</td>
    <td>The date/time the file was added to Coppermine.<p><small>Note: Coppermine does not use this field when sorting files by date. (It uses the pid field instead).</small></p></td>
    <td></td>
  </tr>
  <tr>
    <td><strong>owner_id</strong></td>
    <td>Integer</td>
    <td>The user who uploaded this file. 0 for anonymous users.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>pic_rating</strong></td>
    <td>Integer</td>
    <td>The value represents the current average rating of the file. This allows Coppermine to track the average rating without having to store all ratings ever made. Divide this number by 2000 to get a rating out of 5. See <i>ratepic.php</i> for how the value is calculated.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>votes</strong></td>
    <td>Integer</td>
    <td>The total number of votes/ratings made on the file.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>title</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The short title of the file.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>caption</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The longer description of the file.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>keywords</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Used to tag the file with a given word or phrase. Used in searching, 'clickable keywords', and for the 'linked files' feature. The keyword separator is a configuration setting.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>approved</strong></td>
    <td>YES / NO</td>
    <td>Whether the file has been approved by the administrator. Files that are not approved are not displayed to regular users. If approval is not enabled then the file gets a value of YES automatically.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>galleryicon</strong></td>
    <td>Integer</td>
    <td>Indicates that this file has been selected as the thumbnail for a user gallery.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>user{1,2,3,4}</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom fields for image description.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>url_prefix</strong></td>
    <td>Integer</td>
    <td>Designed as a way to allow some files to be stored in an alternate location to the <i>albums</i> directory, but this feature is not used by Coppermine itself. See the function <i>get_pic_url()</i> in <i>include/functions.inc.php</i>. Should normally be set to 0.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pic_raw_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP of the uploader. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pic_hdr_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP of the uploader. This IP is derived from the HTTP_CLIENT_IP or HTTP_X_FORWARDED_FOR variables. If the webserver is behind a proxy this should be the actual client IP instead of the proxy's IP. If neither variable is present this will be the same as the <strong>pic_raw_ip</strong> value.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>lasthit_ip</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The IP address of the last visitor to view the file. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>position</strong></td>
    <td>Integer</td>
    <td>The position of the file within the album. This is only taken into account if the default sort order is set to position ascending or descending in config. The positions are set using the 'sort my pictures' page.</td>
    <td></td>
  </tr>
</table>

<a id="db_plugins"></a><h2>cpg15x_plugins<a href="#db_plugins" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>List the currently installed plugins.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>plugin_id</strong></td>
    <td>Integer</td>
    <td>Primary key. Simply used to manage plugins.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>name</strong></td>
    <td>Text (&lt;=64 chars)</td>
    <td>The plugin name as defined by the plugin creator.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>path</strong></td>
    <td>Text (&lt;=128 chars)</td>
    <td>The name of the plugin's folder within the <i>plugins</i> directory.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>priority</strong></td>
    <td>Integer</td>
    <td>Plugins are loaded and applied in a user specified order (by priority ascending). This can help reduce problems with plugins that don't play nice with other plugins.</td>
    <td></td>
  </tr>
</table>

<a id="db_sessions"></a><h2>cpg15x_sessions<a href="#db_sessions" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Tracks sessions for logged in and anonymous users. This is not used if Coppermine is bridged. As such, all relevant code can be found in <i>bridge/coppermine.inc.php</i>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>session_id</strong></td>
    <td>MD5 hash</td>
    <td>Primary key. Session identifier. This is generated the first time a visitor loads a page and is retained until it expires. The <strong>user_id</strong> associated with the session is updated if the user logs in and out.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_id</strong></td>
    <td>Integer</td>
    <td>The user whose session this is. 0 for anonymous sessions.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>time</strong></td>
    <td>Unix timestamp</td>
    <td>The time of the last action by the visitor. This is used to clean out expired sessions periodically.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>remember</strong></td>
    <td>Integer</td>
    <td>Whether the user selected 'remember me' at login. This extends the session timeout from the normal 1 hour to 2 weeks.</td>
    <td></td>
  </tr>
</table>

<a id="db_temp_messages"></a><h2>cpg15x_temp_messages<a href="#db_temp_messages" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Used to store messages from one page to the other.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_TEMP_MESSAGES']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>message_id</strong></td>
    <td>Text (&lt;=80 chars)</td>
    <td>Primary key. Uniquely identifies the messages.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_id</strong></td>
    <td>Integer</td>
    <td>The user the message is aimed at.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>time</strong></td>
    <td>Unix timestamp</td>
    <td>The time of the message. This is used to clean out expired messages periodically.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>message</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>The text of the message.</td>
    <td></td>
  </tr>
</table>

<a id="db_usergroups"></a><h2>cpg15x_usergroups<a href="#db_usergroups" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains the user groups. If bridged the table will contain imported groups from the forum. The data for the default groups are available in <i>sql/basic.sql</i></p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_USERGROUPS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_usergroups-group_id"></a><strong>group_id</strong></td>
    <td>Integer</td>
    <td>Primary key. Uniquely identifies the group.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>group_name</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The name of the group.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>group_quota</strong></td>
    <td>Integer</td>
    <td>Maximum amount of disk space (in bytes) that users in this group are permitted to upload to their user gallery.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>can_rate_pictures</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group has permission to vote/rate files.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>can_send_ecards</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group has permission to send ecards files.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>can_post_comments</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group has permission to post comments.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>can_upload_pictures</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group has permission to upload files to public albums.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>can_create_albums</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group has permission to upload files to their personal user gallery.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>pub_upl_need_approval</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group must await approval for any uploads to public albums.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>priv_upl_need_approval</strong></td>
    <td>Integer</td>
    <td>Indicates whether or not this group must await approval for any uploads to their personal user gallery.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>access_level</strong></td>
    <td>Integer</td>
    <td>Indicates what level of access the group has. 0 = no access, 1 = thumbnails only, 2 = thumbnails and intermedaite files, 3 = All</td>
    <td></td>
  </tr>
</table>

<a id="db_users"></a><h2>cpg15x_users<a href="#db_users" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Contains all registered users. If bridged this table is not used, however the original admin account and any accounts created while unbridged will remain.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_USERS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><a id="db_users-user_id"></a><strong>user_id</strong></td>
    <td>Integer</td>
    <td>Primary key. Uniquely identifies the user.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_group</strong></td>
    <td>Integer</td>
    <td>The primary group of the user.</td>
    <td>
        <a href="#db_usergroups-group_id">cpg15x_usergroups.group_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>user_active</strong></td>
    <td>YES / NO</td>
    <td>Indicates whether the user has completed any necessary activation/approval steps after registration.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_name</strong></td>
    <td>Text (&lt;=25 chars)</td>
    <td>Unique key. The name of the user.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_password</strong></td>
    <td>MD5 hash</td>
    <td>A hash of the user's password. The password cannot be determined from the hash, so the 'forgot password' feature generates a new password.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_lastvisit</strong></td>
    <td>Datetime</td>
    <td>The date/time of the last login by this user. This is only updated when the user logs in. If the user has never logged in this will be 0000-00-00 00:00:00</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_regdate</strong></td>
    <td>Datetime</td>
    <td>The date/time the user registered their account.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_group_list</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Any additional groups the user is a member of are listed here, separated with commas.</td>
    <td>
        <a href="#db_usergroups-group_id">cpg15x_usergroups.group_id</a>
    </td>
  </tr>
  <tr>
    <td><strong>user_email</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The current email address of the user.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile1</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom profile field. By default this is 'Location'.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile2</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom profile field. By default this is 'Interests'.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile3</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom profile field. By default this is 'Website'.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile4</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom profile field. By default this is 'Occupation'.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile5</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>Custom profile field. By default this is unused.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_profile6</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>Custom profile field. By default this is 'Biography'. This field is longer than the others.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_actkey</strong></td>
    <td>MD5 hash</td>
    <td>Randomly generated key used in account activation.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>user_language</strong></td>
    <td>Text (&lt;=40 chars)</td>
    <td>The user's language preference. Only half implemented.</td>
    <td></td>
  </tr>
</table>

<a id="db_votes"></a><h2>cpg15x_votes<a href="#db_votes" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>Tracks user votes to prevent repeat ratings. The table is pruned automatically.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_VOTES']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>pic_id</strong></td>
    <td>Integer</td>
    <td>Composite primary key. The pid of the file the vote related to/</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>user_md5_id</strong></td>
    <td>MD5 hash</td>
    <td>Composite primary key. A randomly generated unique id used to 'identify' anonymous users. For registered users this is the hash of the user_id.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>vote_time</strong></td>
    <td>Unix timestamp</td>
    <td>The date/time of the vote. Used when cleaning the table of old votes.</td>
    <td></td>
  </tr>
</table>

<a id="db_vote_stats"></a><h2>cpg15x_vote_stats<a href="#db_vote_stats" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>If the detailed vote stats feature is enabled, this table will contain that data. Can safely be emptied or pruned if required.</p>
<p class="cpg_example">If you want to refer to this table code-wise, use <span class="code">$CONFIG['TABLE_VOTE_STATS']</span>.</p>
<br />

<table class="cpg_zebra">
  <tr>
    <th>Field</th>
    <th class="th120">Type</th>
    <th>Description</th>
    <th>References</th>
  </tr>
  <tr>
    <td><strong>sid</strong></td>
    <td>Integer</td>
    <td>Primary key. Used to identify this vote in the interface.</td>
    <td></td>
  </tr>
  <tr>
    <td><a id="db_vote_stats-pid"></a><strong>pid</strong></td>
    <td>Integer</td>
    <td>The file that this vote was on.</td>
    <td>
        <a href="#db_pictures-pid">cpg15x_pictures.pid</a>
    </td>
  </tr>
  <tr>
    <td><strong>rating</strong></td>
    <td>Integer</td>
    <td>The rating given.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>ip</strong></td>
    <td>Text (&lt;=20 chars)</td>
    <td>The IP address of the voter. This IP is derived from the REMOTE_ADDR variable. If the webserver is behind a proxy this will probably be the IP of the proxy.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>sdate</strong></td>
    <td>Unix timestamp</td>
    <td>The date/time of the vote.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>referer</strong></td>
    <td>Text (&lt;=65k chars)</td>
    <td>If the voter arrived from another page, the URL of that page (if available) will be stored here.</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>browser</strong></td>
    <td>Text (&lt;=255 chars)</td>
    <td>The web browser the voter used (if reported by the browser, and if recognised as a known browser).</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>os</strong></td>
    <td>Text (&lt;=50 chars)</td>
    <td>The operating system the voter used (if reported by the browser, and if recognised as a known operating system).</td>
    <td></td>
  </tr>
  <tr>
    <td><strong>uid</strong></td>
    <td>Integer</td>
    <td>The id of the user if logged in, 0 for anonymous visitors.</td>
    <td>
        <a href="#db_users-user_id">cpg15x_users.user_id</a>
    </td>
  </tr>
</table>


<div id="doc_footer">
	<div class="doc_info_wrapper">
		<span id="doc_last_changed">$LastChangedDate$</span>
	</div>
</div>
</body>
</html>