<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
<title>Versioncheck - Coppermine Photo Gallery - Documentation &amp; Manual</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="language" content="en" />
<meta name="copyright" content="Coppermine dev team" />
<meta name="description" content="This part of the documentation is not meant for end users of Coppermine, but only for developers. There is no support for this section, it comes as-is." />
<!--
  Coppermine version: 1.6.03
  $HeadURL$
-->
<link rel="stylesheet" type="text/css" href="../style/style.css" media="all" />
<link rel="stylesheet" type="text/css" href="../style/screen.css" media="screen" />
<link rel="stylesheet" type="text/css" href="../style/print.css" media="print" />
<link rel="shortcut icon" href="../favicon.ico" />
<script src="../js/jquery.js" type="text/javascript"></script>
<script src="../js/jquery.treeview.js" type="text/javascript"></script>
<script src="script.js" type="text/javascript"></script>
</head>
<body>
<h1 id="docheader">Coppermine Photo Gallery v1.6.x: Documentation and Manual</h1>
<div id="toc">
<a href="toc.htm">Table of Contents</a>
</div>

<a id="dev_versioncheck"></a><h1>Versioncheck<a href="#dev_versioncheck" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h1>
<p>Dev-only issues related to versioncheck.</p>

<a id="dev_versioncheck_hidden_features"></a><h2>Hidden features<a href="#dev_versioncheck_hidden_features" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>In versioncheck versions prior to cpg1.5.x it has been comparatively hard to update the version information when a new package was going to be released, as the packager had to go through all changes manually. In cpg1.5.x (revision 3977 and later), the packager can simply add the parameter <span class="code">?output=create</span> to the URL to force the script loop through the existing entries and update the version / revision / MD5 hashes. You only have to copy the output of the screen and paste it into include/cpg16x.files.xml</p>
<p>Another &quot;hidden&quot; feature is the option to embedd the output into another coppermine-driven page to allow an initial check to be performed during first install.</p>
<p>However, something that needs to be done manually: if folders/files get added to the svn or are renamed, the change needs to be reflected in the XML file as well.</p>

<a id="dev_versioncheck_xml"></a><h2>XML structure<a href="#dev_versioncheck_xml" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<p>The XML file is being updated when using the <span class="code">?output=create</span> parameter, but each developer who is adding a new file to the SVN repository is responsible as well for coming up with a corresponding entry in the XML file. The XML structure should be self-explanatory. Here's a list of possible entries:</p>
<ul>
    <li>
        <span class="code">&lt;fullpath&gt; ... &lt;fullpath&gt;</span><br />
        The full relative path to the file in question, seen from the coppermine root folder. Folders should have a trailing slash. Possible placeholders: <span class="code">**fullpath**</span> will be replaced with the albums folder - for a default install, this would be <span class="code">albums</span>; <span class="code">**userpics**</span> will be replaced with the userpics folder set in config.
    </li>
    <li>
        <span class="code">&lt;version&gt; ... &lt;/version&gt;</span><br />
        The version number in the header. Only applies for text files - folder names and binary files can not have a version information.
    </li>
    <li>
        <span class="code">&lt;revision&gt; ... &lt;/revision&gt;</span><br />
        The SVN revision number in the header. Only applies for text files - folder names and binary files can not have a version information.
    </li>
    <li>
        <span class="code">&lt;status&gt; ... &lt;/status&gt;</span><br />
        Currently, there are three possible values: mandatory, optional, remove. If a file get's tagged as "remove", the user running versioncheck will be notified that the file needs to be removed for security reasons. This is meant to make sure that we don't have to carry so many outdated files from older versions with us.
    </li>
    <li>
        <span class="code">&lt;permission&gt; ... &lt;/permission&gt;</span><br />
        Possible values: read, write. Needs only to be set specifically for folders that <em>must</em> be writable.
    </li>
    <li>
        <span class="code">&lt;hash&gt; ... &lt;/hash&gt;</span><br />
        MD5-hash of the file meant to make sure that we notcie if files got corrupted or tampered with. Will not work on all platforms. Value is being created during the output=create stage.
    </li>
</ul>


<a id="dev_versioncheck_todo"></a><h2>To do list<a href="#dev_versioncheck_todo" title="Link to this section"><img src="images/anchor.gif" width="15" height="9" alt="" /></a></h2>
<ul>
  <li>Add help icons and corresponding explanations.</li>
</ul>

<br class="clrb" />

<div id="doc_footer">
	<div class="doc_info_wrapper">
		<span id="doc_last_changed">$LastChangedDate$</span>
	</div>
</div>
</body>
</html>